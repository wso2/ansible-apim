################################################################################
#   Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved
#
#   Licensed under the Apache License, Version 2.0 (the \"License\");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an \"AS IS\" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
################################################################################

  # Carbon Configuration Parameters
wso2.carbon:
  type: wso2-apim-analytics
    # value to uniquely identify a server
  id: {{ wso2_carbon_id }}
    # server name
  name: WSO2 API Manager Analytics Server
    # enable/disable hostname verifier
  hostnameVerificationEnabled: false
    # ports used by this server
  ports:
      # port offset
    offset: {{ ports_offset }}

  # Configuration used for the databridge communication
databridge.config:
    # No of worker threads to consume events
    # THIS IS A MANDATORY FIELD
  workerThreads: 10
    # Maximum amount of messages that can be queued internally in MB
    # THIS IS A MANDATORY FIELD
  maxEventBufferCapacity: 10000000
    # Queue size; the maximum number of events that can be stored in the queue
    # THIS IS A MANDATORY FIELD
  eventBufferSize: 2000
    # Keystore file path
    # THIS IS A MANDATORY FIELD
  keyStoreLocation : {{ key_store_location }}
    # Keystore password
    # THIS IS A MANDATORY FIELD
  keyStorePassword : {{ key_store_password }}
    # Session Timeout value in mins
    # THIS IS A MANDATORY FIELD
  clientTimeoutMin: 30
    # Data receiver configurations
    # THIS IS A MANDATORY FIELD
  dataReceivers:
  -
      # Data receiver configuration
    dataReceiver:
        # Data receiver type
        # THIS IS A MANDATORY FIELD
      type: Thrift
        # Data receiver properties
      properties:
        tcpPort: '{{ thrift_data_receiver_tcp_port }}'
        sslPort: '{{ thrift_data_receiver_ssl_port }}'

  -
      # Data receiver configuration
    dataReceiver:
        # Data receiver type
        # THIS IS A MANDATORY FIELD
      type: Binary
        # Data receiver properties
      properties:
        tcpPort: '{{ binary_data_receiver_tcp_port }}'
        sslPort: '{{ binary_data_receiver_ssl_port }}'
        tcpReceiverThreadPoolSize: '100'
        sslReceiverThreadPoolSize: '100'
        hostName: {{ hostname }}

  # Configuration of the Data Agents - to publish events through databridge
data.agent.config:
    # Data agent configurations
    # THIS IS A MANDATORY FIELD
  agents:
  -
      # Data agent configuration
    agentConfiguration:
        # Data agent name
        # THIS IS A MANDATORY FIELD
      name: Thrift
        # Data endpoint class
        # THIS IS A MANDATORY FIELD
      dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.thrift.ThriftDataEndpoint
        # Data publisher strategy
      publishingStrategy: async
        # Trust store path
      trustStorePath: '{{ trust_store_location }}'
        # Trust store password
      trustStorePassword: '{{ trust_store_password }}'
        # Queue Size
      queueSize: 32768
        # Batch Size
      batchSize: 200
        # Core pool size
      corePoolSize: 1
        # Socket timeout in milliseconds
      socketTimeoutMS: 30000
        # Maximum pool size
      maxPoolSize: 1
        # Keep alive time in pool
      keepAliveTimeInPool: 20
        # Reconnection interval
      reconnectionInterval: 30
        # Max transport pool size
      maxTransportPoolSize: 250
        # Max idle connections
      maxIdleConnections: 250
        # Eviction time interval
      evictionTimePeriod: 5500
        # Min idle time in pool
      minIdleTimeInPool: 5000
        # Secure max transport pool size
      secureMaxTransportPoolSize: 250
        # Secure max idle connections
      secureMaxIdleConnections: 250
        # secure eviction time period
      secureEvictionTimePeriod: 5500
        # Secure min idle time in pool
      secureMinIdleTimeInPool: 5000
        # SSL enabled protocols
      sslEnabledProtocols: TLSv1.1,TLSv1.2
        # Ciphers
      ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
  -
      # Data agent configuration
    agentConfiguration:
        # Data agent name
        # THIS IS A MANDATORY FIELD
      name: Binary
        # Data endpoint class
        # THIS IS A MANDATORY FIELD
      dataEndpointClass: org.wso2.carbon.databridge.agent.endpoint.binary.BinaryDataEndpoint
        # Data publisher strategy
      publishingStrategy: async
        # Trust store path
      trustStorePath: '{{ trust_store_location }}'
        # Trust store password
      trustStorePassword: '{{ trust_store_password }}'
        # Queue Size
      queueSize: 32768
        # Batch Size
      batchSize: 200
        # Core pool size
      corePoolSize: 1
        # Socket timeout in milliseconds
      socketTimeoutMS: 30000
        # Maximum pool size
      maxPoolSize: 1
        # Keep alive time in pool
      keepAliveTimeInPool: 20
        # Reconnection interval
      reconnectionInterval: 30
        # Max transport pool size
      maxTransportPoolSize: 250
        # Max idle connections
      maxIdleConnections: 250
        # Eviction time interval
      evictionTimePeriod: 5500
        # Min idle time in pool
      minIdleTimeInPool: 5000
        # Secure max transport pool size
      secureMaxTransportPoolSize: 250
        # Secure max idle connections
      secureMaxIdleConnections: 250
        # secure eviction time period
      secureEvictionTimePeriod: 5500
        # Secure min idle time in pool
      secureMinIdleTimeInPool: 5000
        # SSL enabled protocols
      sslEnabledProtocols: TLSv1.1,TLSv1.2
        # Ciphers
      ciphers: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256

  # Deployment configuration parameters
wso2.artifact.deployment:
    # Scheduler update interval
  updateInterval: 5

  # HA Configuration
state.persistence:
  enabled: false
  intervalInMin: 1
  revisionsToKeep: 2
  persistenceStore: org.wso2.carbon.streaming.integrator.core.persistence.FileSystemPersistenceStore
  config:
    location: siddhi-app-persistence

  # Secure Vault Configuration
wso2.securevault:
  secretRepository:
    type: org.wso2.carbon.secvault.repository.DefaultSecretRepository
    parameters:
      privateKeyAlias: wso2carbon
      keystoreLocation: ${sys:carbon.home}/resources/security/securevault.jks
      secretPropertiesFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/secrets.properties
  masterKeyReader:
    type: org.wso2.carbon.secvault.reader.DefaultMasterKeyReader
    parameters:
      masterKeyReaderFile: ${sys:carbon.home}/conf/${sys:wso2.runtime}/master-keys.yaml


# Data Sources Configuration
wso2.datasources:
  dataSources:
  # Dashboard data source
  - name: WSO2_DASHBOARD_DB
    description: The datasource used for dashboard feature
    jndiConfig:
      name: jdbc/DASHBOARD_DB
      useJndiReference: true
    definition:
      type: RDBMS
      configuration:
        jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/${sys:wso2.runtime}/database/DASHBOARD_DB;IFEXISTS=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;MVCC=TRUE'
        username: wso2carbon
        password: wso2carbon
        driverClassName: org.h2.Driver
        maxPoolSize: 20
        idleTimeout: 60000
        connectionTestQuery: SELECT 1
        validationTimeout: 30000
        isAutoCommit: false
  - name: BUSINESS_RULES_DB
    description: The datasource used for dashboard feature
    jndiConfig:
      name: jdbc/BUSINESS_RULES_DB
      useJndiReference: true
    definition:
      type: RDBMS
      configuration:
        jdbcUrl: '{{ business_rules_db_url }}'
        username: {{ business_rules_db_username }}
        password: {{ business_rules_db_password }}
        driverClassName: {{ business_rules_db_driver }}
        maxPoolSize: 20
        idleTimeout: 60000
        connectionTestQuery: {{ business_rules_db_test_query }}
        validationTimeout: 30000
        isAutoCommit: false

  # carbon metrics data source
  - name: WSO2_METRICS_DB
    description: The datasource used for dashboard feature
    jndiConfig:
      name: jdbc/WSO2MetricsDB
    definition:
      type: RDBMS
      configuration:
        jdbcUrl: 'jdbc:h2:${sys:carbon.home}/wso2/dashboard/database/metrics;AUTO_SERVER=TRUE'
        username: wso2carbon
        password: wso2carbon
        driverClassName: org.h2.Driver
        maxPoolSize: 20
        idleTimeout: 60000
        connectionTestQuery: SELECT 1
        validationTimeout: 30000
        isAutoCommit: false

  - name: WSO2_PERMISSIONS_DB
    description: The datasource used for dashboard feature
    jndiConfig:
      name: jdbc/PERMISSION_DB
      useJndiReference: true
    definition:
      type: RDBMS
      configuration:
        jdbcUrl: '{{ wso2_permissions_db_url }}'
        username: {{ wso2_permissions_db_username }}
        password: {{ wso2_permissions_db_password }}
        driverClassName: {{ wso2_permissions_db_driver }}
        maxPoolSize: 10
        idleTimeout: 60000
        connectionTestQuery: {{ wso2_permissions_db_test_query }}
        validationTimeout: 30000
        isAutoCommit: false 

  #Data source for APIM Analytics
  - name: APIM_ANALYTICS_DB
    description: Datasource used for APIM Analytics
    jndiConfig:
      name: jdbc/APIM_ANALYTICS_DB
    definition:
      type: RDBMS
      configuration:
        jdbcUrl: '{{ apim_analytics_db_url }}'
        username: {{ apim_analytics_db_username }}
        password: {{ apim_analytics_db_password }}
        driverClassName: {{ apim_analytics_db_driver }}
        maxPoolSize: 50
        idleTimeout: 60000
        connectionTestQuery: {{ wso2_permissions_db_test_query }}
        validationTimeout: 30000
        isAutoCommit: false

   #Main datasource used in API Manager
  - name: AM_DB
    description: Main datasource used by API Manager
    jndiConfig:
      name: jdbc/AM_DB
    definition:
      type: RDBMS
      configuration:
        jdbcUrl: "{{ am_db_url }}"
        username: {{ am_db_username }}
        password: {{ am_db_password }}
        driverClassName: {{ am_db_driver }}
        maxPoolSize: 10
        idleTimeout: 60000
        connectionTestQuery: {{ am_test_query }}
        validationTimeout: 30000
        isAutoCommit: false

wso2.business.rules.manager:
  datasource: BUSINESS_RULES_DB
  # rule template wise configuration for deploying business rules
  deployment_configs:
    -
     # <IP>:<HTTPS Port> of the Worker node
     {%  for node in worker_nodes %}
{{ node.ip }}:{{ node.port }}:
       # UUIDs of rule templates that are needed to be deployed on the node
       - stock-data-analysis
       - stock-exchange-input
       - stock-exchange-output
       - identifying-continuous-production-decrease
       - popular-tweets-analysis
       - http-analytics-processing
       - message-tracing-source-template
       - message-tracing-app-template
     {%  endfor %}
  # credentials for worker nodes
  username: admin
  password: admin

wso2.transport.http:
  transportProperties:
    - name: "server.bootstrap.socket.timeout"
      value: 60
    - name: "client.bootstrap.socket.timeout"
      value: 60
    - name: "latency.metrics.enabled"
      value: true

  listenerConfigurations:
    - id: "default"
      host: "{{ hostname }}"
      port: {{ transport_listner_config_port }}

    - id: "default-https"
      host: "{{ hostname }}"
      port: {{ transport_listner_config_https_port }}
      scheme: https
      keyStoreFile: "{{ key_store_location }}"
      keyStorePassword: {{ key_store_password }}
      certPass: {{ cert_password }}

## Dashboard data provider authorization
data.provider.configs:
  authorizingClass: org.wso2.analytics.apim.dashboards.core.data.provider.Authorizer

## Additional APIs that needs to be added to the server.
## Should be provided as a key value pairs { API context path: Microservice implementation class }
## The configured APIs will be available as https://{host}:{port}/analytics-dashboard/{API_context_path}
additional.apis:
  /apis/analytics/v1.0/apim: org.wso2.analytics.apim.rest.api.proxy.ApimApi
  /apis/v1.0/report: org.wso2.analytics.apim.rest.api.report.ReportApi

report:
  implClass: org.wso2.analytics.apim.rest.api.report.reportgen.DefaultReportGeneratorImpl

## Authentication configuration
auth.configs:
  type: apim
  ssoEnabled: true
  properties:
    adminScope: apim_analytics:admin_carbon.super
    allScopes: apim_analytics:admin apim_analytics:product_manager apim_analytics:api_developer apim_analytics:app_developer apim_analytics:devops_engineer apim_analytics:analytics_viewer apim_analytics:everyone openid apim:api_view apim:subscribe
    adminUsername: {{ admin_service_username }}
    adminPassword: {{ admin_service_password }}
    kmDcrUrl: {{ admin_service_url }}/client-registration/v0.16/register
    kmTokenUrlForRedirection: {{ admin_service_url }}/oauth2
    kmTokenUrl: {{ admin_service_url }}/oauth2
    kmUsername: {{ keymanager_username }}
    kmPassword: {{ keymanager_password }}
    portalAppContext: analytics-dashboard
    businessRulesAppContext : business-rules
    cacheTimeout: 30
    baseUrl: https://localhost:9643
    grantType: authorization_code
    publisherUrl: {{ admin_service_url }}
    devPortalUrl: {{ admin_service_url }}
    externalLogoutUrl: {{ admin_service_url }}/oidc/logout

wso2.dashboard:
  roles:
    creators:
      - apim_analytics:admin_carbon.super
  themeConfigProviderClass: org.wso2.carbon.dashboards.core.DefaultDashboardThemeConfigProvider

## RDBMS Data Provider configuration
wso2.rdbms.data.provider:
  timeTypes:
    - DATE
    - TIME
    - DATETIME
    - TIMESTAMP
    - TIMESTAMP WITHOUT TIME ZONE
